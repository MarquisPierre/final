{"version":3,"sources":["components/AddContact/index.js","components/EditContact/index.js","components/Home/index.js","components/Navbar/index.js","App.js","redux/reducers/contactReducer.js","index.js"],"names":["connect","state","contacts","dispatch","addContact","data","type","payload","useState","name","setName","email","setEmail","phone","setPhone","history","useHistory","className","onSubmit","e","preventDefault","checkContactEmailExists","filter","contact","checkContactPhoneExists","toast","warning","length","error","id","success","push","placeholder","value","onChange","target","updateContact","useParams","currentContact","find","parseInt","useEffect","onClick","deleteContact","to","scope","map","Navbar","App","basename","process","exact","path","component","initialState","store","createStore","action","contactFilter","contactUpdate","Object","assign","composeWithDevTools","rootElement","document","getElementById","ReactDOM","render"],"mappings":"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","file":"static/js/main.52ddd066.chunk.js","sourcesContent":["import React, { useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport { useHistory } from \"react-router\";\nimport { toast } from \"react-toastify\";\n//<h1 className=\"text-center text-dark py-3 display-2\">Add Post</h1>\n\nconst AddPost = ({ contacts, addContact }) => {\n  const [name, setName] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [phone, setPhone] = useState(\"\");\n\n  const history = useHistory();\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    const checkContactEmailExists = contacts.filter((contact) =>\n      contact.email === email ? contact : null\n    );\n    const checkContactPhoneExists = contacts.filter((contact) =>\n      contact.phone === phone ? contact : null\n    );\n\n    if (!email || !name || !phone) {\n      return toast.warning(\"Please fill in all fields!!\");\n    }\n    if (checkContactEmailExists.length > 0) {\n      return toast.error(\"This email already exists!!\");\n    }\n    if (checkContactPhoneExists.length > 0) {\n      return toast.error(\"This phone number already exists!!\");\n    }\n\n    const data = {\n      id: contacts.length > 0 ? contacts[contacts.length - 1].id + 1 : 0,\n      email,\n      name,\n      phone,\n    };\n\n    addContact(data);\n    toast.success(\"Contact added successfully!!\");\n    history.push(\"/\");\n  };\n\n  return (\n    <div className=\"container-fluid\">\n      \n      <div className=\"row\">\n        <div className=\"col-md-6 p-5 mx-auto shadow\">\n          <form onSubmit={handleSubmit}>\n            <div className=\"form-group\">\n              <input\n                className=\"form-control\"\n                type=\"text\"\n                placeholder=\"Full name\"\n                value={name}\n                onChange={(e) => setName(e.target.value)}\n              />\n            </div>\n            <div className=\"form-group\">\n              <input\n                className=\"form-control\"\n                type=\"email\"\n                placeholder=\"Email\"\n                value={email}\n                onChange={(e) => setEmail(e.target.value)}\n              />\n            </div>\n            <div className=\"form-group\">\n              <input\n                className=\"form-control\"\n                type=\"number\"\n                placeholder=\"Phone\"\n                value={phone}\n                onChange={(e) => setPhone(e.target.value)}\n              />\n            </div>\n            <div className=\"form-group\">\n              <input\n                className=\"btn btn-block btn-dark\"\n                type=\"submit\"\n                value=\"Add\"\n              />\n            </div>\n          </form>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  contacts: state,\n});\nconst mapDispatchToProps = (dispatch) => ({\n  addContact: (data) => {\n    dispatch({ type: \"ADD_CONTACT\", payload: data });\n  },\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(AddPost);\n","import React, { useEffect, useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport { useHistory, useParams } from \"react-router\";\nimport { toast } from \"react-toastify\";\n\nconst EditContact = ({ contacts, updateContact }) => {\n  const { id } = useParams();\n  const history = useHistory();\n  const currentContact = contacts.find(\n    (contact) => contact.id === parseInt(id)\n  );\n\n  useEffect(() => {\n    setName(currentContact.name);\n    setEmail(currentContact.email);\n    setPhone(currentContact.phone);\n  }, [currentContact]);\n\n  const [name, setName] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [phone, setPhone] = useState(\"\");\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    const checkContactEmailExists = contacts.filter((contact) =>\n      contact.email === email && contact.id !== currentContact.id\n        ? contact\n        : null\n    );\n    const checkContactPhoneExists = contacts.filter((contact) =>\n      contact.phone === phone && contact.id !== currentContact.id\n        ? contact\n        : null\n    );\n\n    if (!email || !name || !phone) {\n      return toast.warning(\"Please fill in all fields!!\");\n    }\n    if (checkContactEmailExists.length > 0) {\n      return toast.error(\"This email already exists!!\");\n    }\n    if (checkContactPhoneExists.length > 0) {\n      return toast.error(\"This phone number already exists!!\");\n    }\n\n    const data = {\n      id: currentContact.id,\n      email,\n      name,\n      phone,\n    };\n\n    updateContact(data);\n    toast.success(\"Contact updated successfully!!\");\n    history.push(\"/\");\n  };\n\n  return (\n    <div className=\"container\">\n      <div className=\"row d-flex flex-column\">\n        <button\n          className=\"btn btn-dark ml-auto my-5\"\n          onClick={() => history.push(\"/\")}\n        >\n          Go back\n        </button>\n        <div className=\"col-md-6 mx-auto shadow p-5\">\n          {currentContact ? (\n            <form onSubmit={handleSubmit}>\n              <div className=\"form-group\">\n                <input\n                  className=\"form-control\"\n                  value={name}\n                  placeholder={\"Name\"}\n                  onChange={(e) => setName(e.target.value)}\n                />\n              </div>\n              <div className=\"form-group\">\n                <input\n                  className=\"form-control\"\n                  value={email}\n                  placeholder={\"Email\"}\n                  onChange={(e) => setEmail(e.target.value)}\n                />\n              </div>\n              <div className=\"form-group\">\n                <input\n                  className=\"form-control\"\n                  value={phone}\n                  placeholder={\"Phone\"}\n                  onChange={(e) => setPhone(e.target.value)}\n                />\n              </div>\n              <div className=\"form-group d-flex align-items-center justify-content-between my-2\">\n                <button type=\"submit\" className=\"btn btn-primary\">\n                  Update Contact\n                </button>\n                <button\n                  type=\"button\"\n                  className=\"btn btn-danger\"\n                  onClick={() => history.push(\"/\")}\n                >\n                  cancel\n                </button>\n              </div>\n            </form>\n          ) : (\n            <h1 className=\"text-center\">No Contact Found</h1>\n          )}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  contacts: state,\n});\nconst mapDispatchToProps = (dispatch) => ({\n  updateContact: (data) => {\n    dispatch({ type: \"UPDATE_CONTACT\", payload: data });\n  },\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(EditContact);\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { Link } from \"react-router-dom\";\n\nconst Home = ({ contacts, deleteContact }) => {\n  return (\n    <div className=\"container\">\n      <div className=\"row d-flex flex-column\">\n        <Link to=\"/add\" className=\"btn btn-outline-dark my-5 ml-auto \">\n          Add Contact\n        </Link>\n        <div className=\"col-md-10 mx-auto my-4\">\n          <table className=\"table table-hover\">\n            <thead className=\"table-header bg-dark text-white\">\n              <tr>\n                <th scope=\"col\">Id</th>\n                <th scope=\"col\">Name</th>\n                <th scope=\"col\">Email</th>\n                <th scope=\"col\">Phone</th>\n                <th scope=\"col\"></th>\n              </tr>\n            </thead>\n            <tbody>\n              {contacts.length > 0 ? (\n                contacts.map((contact, id) => (\n                  <tr key={id}>\n                    <td>{id + 1}</td>\n                    <td>{contact.name}</td>\n                    <td>{contact.email}</td>\n                    <td>{contact.phone}</td>\n                    <td>\n                      <Link\n                        to={`/edit/${contact.id}`}\n                        className=\"btn btn-secondary\"\n                      >\n                        Edit\n                      </Link>\n                      <button\n                        type=\"button\"\n                        onClick={() => deleteContact(contact.id)}\n                        className=\"btn btn-dark\"\n                      >\n                        Delete\n                      </button>\n                    </td>\n                  </tr>\n                ))\n              ) : (\n                <tr>\n                  <th>No contacts found</th>\n                </tr>\n              )}\n            </tbody>\n          </table>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  contacts: state,\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  deleteContact: (id) => {\n    dispatch({ type: \"DELETE_CONTACT\", payload: id });\n  },\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Home);\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\n\nconst Navbar = () => {\n  return (\n    <div className=\"col-md-12 bg-dark py-2\">\n      <nav className=\"navbar bg-dark navbar-dark\">\n        <Link to={\"/\"} className=\"navbar-brand ml-5\">\n          Contact App\n        </Link>\n      </nav>\n    </div>\n  );\n};\n\nexport default Navbar;\n","import React from \"react\";\nimport { ToastContainer } from \"react-toastify\";\nimport AddPost from \"./components/AddContact\";\nimport EditContact from \"./components/EditContact\";\nimport Home from \"./components/Home\";\nimport Navbar from \"./components/Navbar\";\nimport \"./styles.css\";\nimport { HashRouter as Router } from 'react-router-dom'\nimport { Route } from \"react-router-dom\";\n\nconst App = () => {\n  return (\n    <div className=\"App\">\n      <ToastContainer />\n      <Navbar />\n      <Router basename={process.env.PUBLIC_URL}>\n      <Route exact path=\"/\" component={() => <Home />} />\n      <Route exact path=\"/add\" component={() => <AddPost />} />\n      <Route exact path=\"/edit/:id\" component={() => <EditContact />} />\n      </Router>\n    </div>\n  );\n};\nexport default App;\n","const initialState = [\n  { id: 0, name: \"Marquis Pierre\", email: \"marquispierre27@gmail.com\", phone: 1234567890 },\n  { id: 1, name: \"Example Name\", email: \"example27@gmail.com\", phone: 4567891230 },\n];\n\nexport const contactReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case \"ADD_CONTACT\":\n      state = [...state, action.payload];\n      return state;\n    case \"DELETE_CONTACT\":\n      const contactFilter = state.filter((contact) =>\n        contact.id === action.payload ? null : contact\n      );\n      state = contactFilter;\n      return state;\n    case \"UPDATE_CONTACT\":\n      const contactUpdate = state.filter((contact) =>\n        contact.id === action.payload.id\n          ? Object.assign(contact, action.payload)\n          : contact\n      );\n      state = contactUpdate;\n      return state;\n    case \"RESET_CONTACT\":\n      state = [{ name: null, email: null, phone: null }];\n      return state;\n    default:\n      return state;\n  }\n};\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport {HashRouter} from \"react-router-dom\"\nimport App from \"./App\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"react-toastify/dist/ReactToastify.css\";\n\nimport { createStore } from \"redux\";\nimport { Provider } from \"react-redux\";\nimport { contactReducer } from \"./redux/reducers/contactReducer\";\nimport { composeWithDevTools } from \"redux-devtools-extension\";\n\nconst store = createStore(contactReducer, composeWithDevTools());\n\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(\n  <Provider store={store}>\n    <HashRouter>\n    <App />\n  </HashRouter>\n  </Provider>,\n  rootElement\n);\n"],"sourceRoot":""}